{"version":3,"file":"konverso.js","sources":["ng://konverso/lib/konverso.service.ts","ng://konverso/lib/pipe/safe-html.pipe.ts","ng://konverso/lib/first-visit/first-visit.component.html","ng://konverso/lib/first-visit/first-visit.component.ts","ng://konverso/lib/desktop-full-screen/desktop-full-screen.component.html","ng://konverso/lib/desktop-full-screen/desktop-full-screen.component.ts","ng://konverso/lib/konverso.component.html","ng://konverso/lib/konverso.component.ts","ng://konverso/lib/konverso.module.ts","ng://konverso/konverso.ts"],"sourcesContent":["import {EventEmitter, Inject, Injectable} from '@angular/core';\nimport {ColorSet, DefaultAssets, KonversoInterface, KonversoQuery, KonversoUser} from '../interface/KonversoInterface';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable()\nexport class KonversoService {\n  public authentication: EventEmitter<KonversoUser> = new EventEmitter<KonversoUser>();\n  public assets: DefaultAssets;\n  public firstVisit = false;\n  public firstUsageStory: string[];\n  public ColorSet: ColorSet;\n  private locale: string;\n  private token: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n  // tslint:disable-next-line:variable-name\n  private _token = this.token.asObservable();\n  private user: KonversoUser;\n  private header: HttpHeaders;\n  private endpoint: string;\n\n  constructor(@Inject('__NgxKonverso__') config: KonversoInterface, private http: HttpClient) {\n    this.buildHeaders();\n    this.initInstance(config);\n  }\n\n  /**\n   * Send Query To backend server and get a response\n   * @param query\n   */\n  public async send(query: string): Promise<string | any> {\n    return new Promise((resolve, reject) => {\n      if (query && query.replace(new RegExp(' ', 'g'), '')) {\n        if (this.header) {\n          const preparedData = this.buildQuery(query);\n          const options: any = {\n            headers: this.header\n          };\n          this.http.post(this.endpoint, preparedData, options)\n            .subscribe((data: any) => {\n              resolve(data);\n            });\n        } else {\n          reject(new Error('Header is not set, please provide a token though user setting or though module configuration'));\n        }\n      } else {\n        reject(new Error('Current input is empty, please try again'));\n      }\n    });\n  }\n\n  /**\n   * @private\n   * Generate Header for backend call\n   */\n  private buildHeaders() {\n    this._token.subscribe((token: string) => {\n      const bearer: string = 'Bearer ' + token;\n      this.header = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': window.location.origin,\n        'Authorization': bearer\n      });\n    });\n  }\n\n  /**\n   * @param config\n   * @private\n   * Initialize Data for User Instance\n   */\n  private initInstance(config: KonversoInterface) {\n    if (config.endpoint) {\n      this.endpoint = config.endpoint;\n      if (config.defaultAssets) {\n        this.assets = config.defaultAssets;\n        if (config.defaultAssets.ColorSet) {\n          this.ColorSet = config.defaultAssets.ColorSet;\n        }\n      }\n      if (config.auth) {\n        this.authentication.subscribe((user: KonversoUser) => {\n          if (!user.lang && config.lang) {\n            user.lang = config.lang;\n          }\n          this.locale = user.lang;\n          if (user.token) {\n            this.token.next(user.token);\n          }\n          if (user.firstVisit) {\n            this.firstVisit = true;\n            delete user.firstVisit;\n            if (config?.BotInitMessage?.FirstUsage &&\n              this.locale &&\n              config?.BotInitMessage?.FirstUsage[this.locale]) {\n              this.firstUsageStory = config.BotInitMessage.FirstUsage[this.locale];\n            }\n          }\n          this.user = user;\n        });\n      } else if (config.lang) {\n        this.locale = config.lang;\n        this.user = {\n          userId: this.guid(),\n          lang: config.lang\n        };\n      }\n      if (config.token) {\n        this.token.next(config.token);\n      }\n    } else {\n      return new Error('Please provide endpoint');\n    }\n  }\n\n  /**\n   * @param query\n   * @private\n   * prepare set data to push to backend server\n   */\n  private buildQuery(query: string): KonversoQuery {\n    // @ts-ignore\n    return {\n      ...this.user,\n      query: query.replace(/\\s+/g, ' ').trim(),\n      isSending :  true\n    };\n  }\n\n  /**\n   * @private\n   * Generate Random uniq Id for Konverso Instance\n   */\n  private guid() {\n    let random = () => {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    };\n    return random() + random() + '-' + random() + '-' + random() + '-' + random() + '-' + random() + random() + random();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(protected sanitizer: DomSanitizer) {}\n  public transform(value: any): any {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n}\n","<ng-container>\n  <div class=\"bot-logo-init-wrapper\">\n    <img [src]=\"assets.FullSizeLogo\">\n  </div>\n  <div class=\"bot-init-text\" [innerHTML]=\"current | safeHtml\"></div>\n  <div class=\"bot-init-bullet-step\">\n      <span *ngFor=\"let elem of firstUsageStory ; let pos = index\" class=\"bot-init-dot\"\n            [style]=\"pos === position ? {\n              backgroundColor : assets?.ColorSet?.Primary,\n              borderColor :assets?.ColorSet?.Primary\n              }:{\n                backgroundColor :assets?.ColorSet?.Secondary,\n                borderColor :assets?.ColorSet?.Primary\n                }\" (click)=\"goTo(pos)\">\n      </span>\n  </div>\n  <div class=\"bot-init-button-wrapper\">\n    <button mat-button class=\"bot-button button-lg\" [style]=\"{\n      backgroundColor : assets?.ColorSet?.Primary,\n      color : assets?.ColorSet?.Secondary\n    }\" (click)=\"start()\">C'est parti !</button>\n  </div>\n\n</ng-container>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {DefaultAssets} from '../../interface/KonversoInterface';\n\n@Component({\n  selector: 'bot-first-visit',\n  templateUrl: './first-visit.component.html',\n  styleUrls: ['./first-visit.component.scss']\n})\nexport class FirstVisitComponent implements OnInit {\n  @Input() firstUsageStory: string[];\n  @Input() assets: DefaultAssets;\n  @Output() ready: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n  public position = 0;\n  public current = null;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.current = this.firstUsageStory[this.position];\n    const clear = setInterval(() => {\n      if (this.position < (this.firstUsageStory.length - 1)) {\n        this.current = this.firstUsageStory[++this.position];\n      } else {\n        clearInterval(clear);\n      }\n    }, 5000);\n  }\n\n  goTo(pos: number) {\n    this.position = pos;\n    this.current = this.firstUsageStory[this.position];\n  }\n\n  start(): void {\n    this.ready.emit(true);\n  }\n\n}\n","<div class=\"bot-container\" [style]=\"{backgroundImage : 'url('+assets.Background+')'}\"\n     xmlns=\"http://www.w3.org/1999/html\">\n  <div class=\"bot-view\">\n    <ng-container *ngIf=\"firstVisit && firstUsageStory\">\n      <bot-first-visit [firstUsageStory]=\"firstUsageStory\" [assets]=\"assets\"\n                       (ready)=\"ready.emit($event)\"></bot-first-visit>\n    </ng-container>\n    <ng-container *ngIf=\"!firstVisit\">\n      <div class=\"bot-chat-wrapper\">\n        <div class=\"bot-discussion-wrapper\">\n          <div class=\"bot-chat\">\n            <ng-container *ngFor=\"let entry of displayData\">\n              <ng-container *ngIf=\"entry.date\">\n                <div class=\"user-input\">\n                  <div class=\"data\" [style]=\"{\n                     backgroundColor : assets?.ColorSet?.Primary,\n                     color : assets?.ColorSet?.Secondary\n                    }\">\n                    {{entry.message}}\n                  </div>\n                  <span class=\"time\">{{entry.date}}</span>\n                </div>\n              </ng-container>\n              <ng-container *ngIf=\"!entry.date\">\n                <div class=\"bot-answer\">\n                  <ng-container *ngIf=\"entry.text\">\n                    <span [innerHTML]=\"entry.text | safeHtml\"></span><br>\n                  </ng-container>\n                  <ng-container *ngIf=\"entry.medias && entry.medias.length\n                   && entry.medias[0].required_actions\n                   && entry.medias[0].required_actions.length\">\n                    <ng-container *ngFor=\"let suggest of entry.medias[0].required_actions\">\n                      <ng-container *ngIf=\"suggest.format === 'button'\">\n                        <button class=\"bot-button\" (click)=\"byPassUserInput(suggest?.value?.onClick)\"\n                                [innerHTML]=\"suggest.label|| suggest.value?.displayedMessage || suggest.value?.title \"></button>\n                      </ng-container>\n                    </ng-container>\n                  </ng-container>\n\n                </div>\n              </ng-container>\n            </ng-container>\n          </div>\n        </div>\n        <div class=\"bot-input-wrapper\">\n          <div class=\"bot-input\">\n            <input type=\"text\" [(ngModel)]=\"userInput\" (keyup.enter)=\"userInput && _send()\">\n            <button class=\"bot-button\" [style]=\"{\n                     backgroundColor : assets?.ColorSet?.Primary,\n                     color : assets?.ColorSet?.Secondary\n            }\" (click)=\"_send()\" [disabled]=\"!userInput\">Envoyer\n            </button>\n          </div>\n        </div>\n        <div class=\"bot-logo\">\n          <img [src]=\"assets.FullSizeLogo\">\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {DefaultAssets, OpenChatBotResponse, UserInput} from '../../interface/KonversoInterface';\n\n@Component({\n  selector: 'bot-full-screen',\n  templateUrl: './desktop-full-screen.component.html',\n  styleUrls: ['./desktop-full-screen.component.css']\n})\nexport class DesktopFullScreenComponent implements OnInit {\n  @Input() assets: DefaultAssets;\n  @Input() firstVisit: boolean = false;\n  @Input() firstUsageStory: string[];\n  @Input() displayData: (UserInput | OpenChatBotResponse)[];\n  @Output() ready: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n  @Output() send: EventEmitter<UserInput> = new EventEmitter<UserInput>(null);\n  @Output() sendBotCommand: EventEmitter<string> = new EventEmitter<string>(null);\n  public userInput: string;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.ready.subscribe((ready: boolean) => {\n      this.firstVisit = false;\n    });\n  }\n\n  public _send() {\n    const userData: UserInput = {\n      message: this.userInput,\n      date: new Date().toLocaleTimeString(navigator.language, {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    };\n    this.send.emit(userData);\n    this.userInput = null;\n  }\n\n  byPassUserInput(botdata: string) {\n    this.sendBotCommand.emit(botdata);\n  }\n}\n","<ng-container *ngIf=\"isMobile\">\n  Mobile\n</ng-container>\n<ng-container *ngIf=\"!isMobile\">\n  <bot-full-screen\n    [assets]=\"assets\"\n    [firstVisit]=\"firstVisit\"\n    [firstUsageStory]=\"firstUsageStory\"\n    (send)=\"send($event)\"\n    (sendBotCommand)=\"sendBotCommand($event)\"\n    [displayData]=\"History\"\n  ></bot-full-screen>\n</ng-container>\n\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {KonversoService} from './konverso.service';\nimport {ColorSet, DefaultAssets, KonversoAnswer, OpenChatBotResponse, UserInput} from '../interface/KonversoInterface';\n\n// @ts-ignore\n@Component({\n  selector: 'ngx-konverso',\n  templateUrl: 'konverso.component.html',\n  styleUrls: ['../../assets/main.scss']\n})\nexport class KonversoComponent implements OnInit {\n  @Output() ready: EventEmitter<boolean> = new EventEmitter<boolean>();\n  public query: string;\n  public isMobile: boolean;\n  public assets: DefaultAssets;\n  public firstVisit: boolean;\n  public firstUsageStory: string[];\n  public colorSet: ColorSet;\n  public History: (UserInput | OpenChatBotResponse)[];\n\n  constructor(private service: KonversoService) {\n  }\n\n  ngOnInit(): void {\n    this.isMobile = this._isMobile();\n    this.assets = this.service.assets;\n    this.firstVisit = this.service.firstVisit;\n    this.firstUsageStory = this.service.firstUsageStory;\n    this.History = [];\n    if (this.service.ColorSet) {\n      this.colorSet = this.service.ColorSet;\n    }\n    this.ready.subscribe((ready: boolean) => {\n      if (ready) {\n        this.firstVisit = false;\n        this.service.firstVisit = false;\n      }\n    });\n  }\n\n  async send($event: UserInput) {\n    this.History.push($event);\n    const index: number = this.History.length - 1;\n    const response: KonversoAnswer = await this.service.send($event.message).catch((err: string) => {\n      console.log('We got an error ', err);\n      // @ts-ignore\n      this.History[index].error = true;\n    });\n    if (response && response.response) {\n      console.log(response);\n      this.History.push(response.response);\n    }\n  }\n\n  async sendBotCommand($event: string) {\n    const response: KonversoAnswer = await this.service.send($event).catch((err: string) => {\n      console.log('We got an error ', err);\n    });\n    if (response && response.response) {\n      console.log(response);\n      this.History.push(response.response);\n    }\n  }\n\n  private _isMobile(): boolean {\n    const isMobile = {\n      Android: (): boolean => {\n        return !!navigator.userAgent.match(/Android/i);\n      },\n      BlackBerry: (): boolean => {\n        return !!navigator.userAgent.match(/BlackBerry/i);\n      },\n      iOS: (): boolean => {\n        return !!navigator.userAgent.match(/iPhone|iPad|iPod/i);\n      },\n      Opera: (): boolean => {\n        return !!navigator.userAgent.match(/Opera Mini/i);\n      },\n      Windows: (): boolean => {\n        return !!navigator.userAgent.match(/IEMobile/i) || !!navigator.userAgent.match(/WPDesktop/i);\n      },\n      any: (): boolean => {\n        return !!(isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n      }\n    };\n    return isMobile.any();\n  }\n\n\n}\n","import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {KonversoComponent} from './konverso.component';\nimport {KonversoInterface} from '../interface/KonversoInterface';\nimport {KonversoService} from './konverso.service';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {DesktopFullScreenComponent} from './desktop-full-screen/desktop-full-screen.component';\nimport {CommonModule} from '@angular/common';\nimport { FirstVisitComponent } from './first-visit/first-visit.component';\nimport { SafeHtmlPipe } from './pipe/safe-html.pipe';\n\n// @ts-ignore\n@NgModule({\n  declarations: [KonversoComponent, DesktopFullScreenComponent, FirstVisitComponent, SafeHtmlPipe],\n  imports: [\n    FormsModule,\n    HttpClientModule,\n    CommonModule,\n  ],\n  providers : [KonversoService],\n  exports: [KonversoComponent]\n})\nexport class KonversoModule {\n  constructor(@Optional() @SkipSelf() parentModule?: KonversoModule) {\n    if (parentModule) {\n      throw new Error(\n        'KonversoModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  public static forRoot(config: KonversoInterface): ModuleWithProviders<KonversoModule> {\n    return {\n      ngModule: KonversoModule,\n      providers: [\n        {provide: '__NgxKonverso__', useValue: config},\n        KonversoService\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵstyleMap","i0.ɵɵelementContainerStart","i0.ɵɵelement","i0.ɵɵtemplate","i0.ɵɵtext","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵtextInterpolate1","i0.ɵɵtextInterpolate"],"mappings":";;;;;;;;MAMa,eAAe;IAc1B,YAAuC,MAAyB,EAAU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAbnF,mBAAc,GAA+B,IAAI,YAAY,EAAgB,CAAC;QAE9E,eAAU,GAAG,KAAK,CAAC;QAIlB,UAAK,GAA4B,IAAI,eAAe,CAAS,IAAI,CAAC,CAAC;;QAEnE,WAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;QAMzC,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;KAC3B;;;;;IAMY,IAAI,CAAC,KAAa;;YAC7B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;gBACjC,IAAI,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;oBACpD,IAAI,IAAI,CAAC,MAAM,EAAE;wBACf,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;wBAC5C,MAAM,OAAO,GAAQ;4BACnB,OAAO,EAAE,IAAI,CAAC,MAAM;yBACrB,CAAC;wBACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC;6BACjD,SAAS,CAAC,CAAC,IAAS;4BACnB,OAAO,CAAC,IAAI,CAAC,CAAC;yBACf,CAAC,CAAC;qBACN;yBAAM;wBACL,MAAM,CAAC,IAAI,KAAK,CAAC,8FAA8F,CAAC,CAAC,CAAC;qBACnH;iBACF;qBAAM;oBACL,MAAM,CAAC,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC,CAAC;iBAC/D;aACF,CAAC,CAAC;SACJ;KAAA;;;;;IAMO,YAAY;QAClB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAa;YAClC,MAAM,MAAM,GAAW,SAAS,GAAG,KAAK,CAAC;YACzC,IAAI,CAAC,MAAM,GAAG,IAAI,WAAW,CAAC;gBAC5B,cAAc,EAAE,kBAAkB;gBAClC,6BAA6B,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM;gBACrD,eAAe,EAAE,MAAM;aACxB,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;;;;;;IAOO,YAAY,CAAC,MAAyB;QAC5C,IAAI,MAAM,CAAC,QAAQ,EAAE;YACnB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAChC,IAAI,MAAM,CAAC,aAAa,EAAE;gBACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC;gBACnC,IAAI,MAAM,CAAC,aAAa,CAAC,QAAQ,EAAE;oBACjC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC;iBAC/C;aACF;YACD,IAAI,MAAM,CAAC,IAAI,EAAE;gBACf,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,IAAkB;;oBAC/C,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE;wBAC7B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;qBACzB;oBACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;oBACxB,IAAI,IAAI,CAAC,KAAK,EAAE;wBACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC7B;oBACD,IAAI,IAAI,CAAC,UAAU,EAAE;wBACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBACvB,OAAO,IAAI,CAAC,UAAU,CAAC;wBACvB,IAAI,aAAA,MAAM,0CAAE,cAAc,0CAAE,UAAU;4BACpC,IAAI,CAAC,MAAM,iBACX,MAAM,0CAAE,cAAc,0CAAE,UAAU,CAAC,IAAI,CAAC,MAAM,EAAC,EAAE;4BACjD,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;yBACtE;qBACF;oBACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;iBAClB,CAAC,CAAC;aACJ;iBAAM,IAAI,MAAM,CAAC,IAAI,EAAE;gBACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC;gBAC1B,IAAI,CAAC,IAAI,GAAG;oBACV,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE;oBACnB,IAAI,EAAE,MAAM,CAAC,IAAI;iBAClB,CAAC;aACH;YACD,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aAC/B;SACF;aAAM;YACL,OAAO,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;SAC7C;KACF;;;;;;IAOO,UAAU,CAAC,KAAa;;QAE9B,uCACK,IAAI,CAAC,IAAI,KACZ,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,EACxC,SAAS,EAAI,IAAI,IACjB;KACH;;;;;IAMO,IAAI;QACV,IAAI,MAAM,GAAG;YACX,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,OAAO,CAAC;iBAC7C,QAAQ,CAAC,EAAE,CAAC;iBACZ,SAAS,CAAC,CAAC,CAAC,CAAC;SACjB,CAAC;QACF,OAAO,MAAM,EAAE,GAAG,MAAM,EAAE,GAAG,GAAG,GAAG,MAAM,EAAE,GAAG,GAAG,GAAG,MAAM,EAAE,GAAG,GAAG,GAAG,MAAM,EAAE,GAAG,GAAG,GAAG,MAAM,EAAE,GAAG,MAAM,EAAE,GAAG,MAAM,EAAE,CAAC;KACtH;;8EArIU,eAAe,WAcN,iBAAiB;oDAd1B,eAAe,WAAf,eAAe;+CAAf,eAAe;cAD3B,UAAU;;sBAeI,MAAM;uBAAC,iBAAiB;;;MCd1B,YAAY;IACvB,YAAsB,SAAuB;QAAvB,cAAS,GAAT,SAAS,CAAc;KAAI;IAC1C,SAAS,CAAC,KAAU;QACzB,OAAO,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;KACtD;;wEAJU,YAAY;4DAAZ,YAAY;+CAAZ,YAAY;cAHxB,IAAI;eAAC;gBACJ,IAAI,EAAE,UAAU;aACjB;;;;;;ICCKA,4BAQO;IADMC,sNAAmB;IAChCC,cAAO;;;;IAPDC,kiBAMM;;;MCLL,mBAAmB;IAO9B;QAJU,UAAK,GAA0B,IAAI,YAAY,CAAU,KAAK,CAAC,CAAC;QACnE,aAAQ,GAAG,CAAC,CAAC;QACb,YAAO,GAAG,IAAI,CAAC;KAGrB;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnD,MAAM,KAAK,GAAG,WAAW,CAAC;YACxB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;gBACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;aACtD;iBAAM;gBACL,aAAa,CAAC,KAAK,CAAC,CAAC;aACtB;SACF,EAAE,IAAI,CAAC,CAAC;KACV;IAED,IAAI,CAAC,GAAW;QACd,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACpD;IAED,KAAK;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACvB;;sFA5BU,mBAAmB;qDAAnB,mBAAmB;QDRhCC,0BACE;QAAAJ,2BACE;QAAAK,sBACF;QAAAH,cAAM;QACNG,sBAAkE;;QAClEL,2BACI;QAAAM,mEAQA;QACJJ,cAAM;QACNF,2BACE;QAAAA,8BAGqB;QAAlBC,6FAAS,WAAO,IAAC;QAACM,0BAAa;QAAAL,cAAS;QAC7CA,cAAM;QAERM,uBAAe;;QArBNC,YAA2B;QAA3BC,yDAA2B;QAEPD,YAAgC;QAAhCC,uEAAgC;QAEjDD,YAAsD;QAAtDC,0CAAsD;QAWdD,YAG9C;QAH8CN,iOAG9C;;+CCZO,mBAAmB;cAL/B,SAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;kBAEE,KAAK;;kBACL,KAAK;;kBACL,MAAM;;;;;ICRLC,0BACE;IAAAJ,uCACgE;IAA/CC,4LAAS,4BAAkB,IAAC;IAACC,cAAkB;IAClEM,uBAAe;;;IAFIC,YAAmC;IAAnCC,wDAAmC,4BAAA;;;;IAQ5CN,0BACE;IAAAJ,4BACE;IAAAA,4BAIE;IAAAO,SACF;IAAAL,cAAM;IACNF,6BAAmB;IAAAO,SAAc;IAAAL,cAAO;IAC1CA,cAAM;IACRM,uBAAe;;;;IAROC,YAGd;IAHcN,uQAGd;IACFM,YACF;IADEE,iDACF;IACmBF,YAAc;IAAdG,mCAAc;;;IAKjCR,0BACE;IAAAC,wBAAiD;;IAAAA,kBACnD;IAAAG,uBAAe;;;IADPC,YAAmC;IAAnCC,4EAAmC;;;;IAMvCN,0BACE;IAAAJ,+BACwG;IAD7EC,waAAkD;IACkBC,cAAS;IAC1GM,uBAAe;;;IADLC,YAAsF;IAAtFC,+MAAsF;;;IAHlGN,0BACE;IAAAE,qKACE;IAGJE,uBAAe;;;IAJCC,YAAmC;IAAnCC,qDAAmC;;;IAJrDN,0BAGE;IAAAE,sJACE;IAKJE,uBAAe;;;IANCC,YAAwD;IAAxDC,6DAAwD;;;IAR5EN,0BACE;IAAAJ,4BACE;IAAAM,uIACE;IAEFA,uIAGE;IAQJJ,cAAM;IACRM,uBAAe;;;IAfGC,YAAkB;IAAlBC,oCAAkB;IAGlBD,YAE8B;IAF9BC,8JAE8B;;;IAnBlDN,0BACE;IAAAE,wHACE;IAUFA,wHACE;IAiBJE,uBAAe;;;IA7BCC,YAAkB;IAAlBC,oCAAkB;IAWlBD,YAAmB;IAAnBC,qCAAmB;;;;IAhB3CN,0BACE;IAAAJ,2BACE;IAAAA,2BACE;IAAAA,2BACE;IAAAM,yGACE;IA8BJJ,cAAM;IACRA,cAAM;IACNF,2BACE;IAAAA,2BACE;IAAAA,8BACA;IADmBC,kOAAuB,0NAAA;IAA1CC,cACA;IAAAF,+BAG6C;IAA1CC,kMAAiB;IAAyBM,qBAC7C;IAAAL,cAAS;IACXA,cAAM;IACRA,cAAM;IACNF,6BACE;IAAAK,wBACF;IAAAH,cAAM;IACRA,cAAM;IACRM,uBAAe;;;IA/COC,YAAiC;IAAjCC,4CAAiC;IAmC5BD,YAAuB;IAAvBC,0CAAuB;IACfD,YAGzB;IAHyBN,uQAGzB;IAAmBO,4CAAuB;IAKzCD,YAA2B;IAA3BC,+DAA2B;;;MC/C7B,0BAA0B;IAUrC;QARS,eAAU,GAAY,KAAK,CAAC;QAG3B,UAAK,GAA0B,IAAI,YAAY,CAAU,KAAK,CAAC,CAAC;QAChE,SAAI,GAA4B,IAAI,YAAY,CAAY,IAAI,CAAC,CAAC;QAClE,mBAAc,GAAyB,IAAI,YAAY,CAAS,IAAI,CAAC,CAAC;KAI/E;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,KAAc;YAClC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB,CAAC,CAAC;KACJ;IAEM,KAAK;QACV,MAAM,QAAQ,GAAc;YAC1B,OAAO,EAAE,IAAI,CAAC,SAAS;YACvB,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,kBAAkB,CAAC,SAAS,CAAC,QAAQ,EAAE;gBACtD,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,SAAS;aAClB,CAAC;SACH,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;IAED,eAAe,CAAC,OAAe;QAC7B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACnC;;oGAjCU,0BAA0B;4DAA1B,0BAA0B;QDRvCV,2BAEE;QAAAA,2BACE;QAAAM,0FACE;QAGFA,2FACE;QAmDJJ,cAAM;QACRA,cAAM;;QA5DqBC,2EAA0D;QAGnEM,YAAqC;QAArCC,yDAAqC;QAIrCD,YAAmB;QAAnBC,mCAAmB;;+CCCxB,0BAA0B;cALtC,SAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;kBAEE,KAAK;;kBACL,KAAK;;kBACL,KAAK;;kBACL,KAAK;;kBACL,MAAM;;kBACN,MAAM;;kBACN,MAAM;;;;ICfTN,0BACE;IAAAG,sBACF;IAAAC,uBAAe;;;;IACfJ,0BACE;IAAAJ,uCAOmB;IAHjBC,2MAAqB,+NAAA;IAGtBC,cAAkB;IACrBM,uBAAe;;;IAPXC,YAAiB;IAAjBC,sCAAiB,oCAAA,8CAAA,kCAAA;;ACDrB;MAMa,iBAAiB;IAU5B,YAAoB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;QATlC,UAAK,GAA0B,IAAI,YAAY,EAAW,CAAC;KAUpE;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QAC1C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;QACpD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;SACvC;QACD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,KAAc;YAClC,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,KAAK,CAAC;aACjC;SACF,CAAC,CAAC;KACJ;IAEK,IAAI,CAAC,MAAiB;;YAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1B,MAAM,KAAK,GAAW,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;YAC9C,MAAM,QAAQ,GAAmB,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,GAAW;gBACzF,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;;gBAErC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;aAClC,CAAC,CAAC;YACH,IAAI,QAAQ,IAAI,QAAQ,CAAC,QAAQ,EAAE;gBACjC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aACtC;SACF;KAAA;IAEK,cAAc,CAAC,MAAc;;YACjC,MAAM,QAAQ,GAAmB,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,GAAW;gBACjF,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;aACtC,CAAC,CAAC;YACH,IAAI,QAAQ,IAAI,QAAQ,CAAC,QAAQ,EAAE;gBACjC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aACtC;SACF;KAAA;IAEO,SAAS;QACf,MAAM,QAAQ,GAAG;YACf,OAAO,EAAE;gBACP,OAAO,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;aAChD;YACD,UAAU,EAAE;gBACV,OAAO,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;aACnD;YACD,GAAG,EAAE;gBACH,OAAO,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;aACzD;YACD,KAAK,EAAE;gBACL,OAAO,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;aACnD;YACD,OAAO,EAAE;gBACP,OAAO,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;aAC9F;YACD,GAAG,EAAE;gBACH,OAAO,CAAC,EAAE,QAAQ,CAAC,OAAO,EAAE,IAAI,QAAQ,CAAC,UAAU,EAAE,IAAI,QAAQ,CAAC,GAAG,EAAE,IAAI,QAAQ,CAAC,KAAK,EAAE,IAAI,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;aACpH;SACF,CAAC;QACF,OAAO,QAAQ,CAAC,GAAG,EAAE,CAAC;KACvB;;kFA5EU,iBAAiB;mDAAjB,iBAAiB;QDV9BJ,iFACE;QAEFA,iFACE;;QAJYI,gCAAgB;QAGhBD,YAAiB;QAAjBC,iCAAiB;;+CCOlB,iBAAiB;cAL7B,SAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;kBAEE,MAAM;;;ACAT;MAWa,cAAc;IACzB,YAAoC,YAA6B;QAC/D,IAAI,YAAY,EAAE;YAChB,MAAM,IAAI,KAAK,CACb,mEAAmE,CAAC,CAAC;SACxE;KACF;IAEM,OAAO,OAAO,CAAC,MAAyB;QAC7C,OAAO;YACL,QAAQ,EAAE,cAAc;YACxB,SAAS,EAAE;gBACT,EAAC,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,MAAM,EAAC;gBAC9C,eAAe;aAChB;SACF,CAAC;KACH;;+CAhBU,cAAc;wGAAd,cAAc,WAC0B,cAAc,sBAJrD,CAAC,eAAe,CAAC,YALpB;YACP,WAAW;YACX,gBAAgB;YAChB,YAAY;SACb;qFAIU,cAAc,mBATV,iBAAiB,EAAE,0BAA0B,EAAE,mBAAmB,EAAE,YAAY,aAE7F,WAAW;QACX,gBAAgB;QAChB,YAAY,aAGJ,iBAAiB;+CAEhB,cAAc;cAV1B,QAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,iBAAiB,EAAE,0BAA0B,EAAE,mBAAmB,EAAE,YAAY,CAAC;gBAChG,OAAO,EAAE;oBACP,WAAW;oBACX,gBAAgB;oBAChB,YAAY;iBACb;gBACD,SAAS,EAAG,CAAC,eAAe,CAAC;gBAC7B,OAAO,EAAE,CAAC,iBAAiB,CAAC;aAC7B;sCAEoD,cAAc;sBAApD,QAAQ;;sBAAI,QAAQ;;;ACvBnC;;;;;;"}