{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://konverso/lib/konverso.service.ts","ng://konverso/Sample/BotMessageSample.ts","ng://konverso/Sample/DotLoader.ts","ng://konverso/lib/translate.service.ts","ng://konverso/lib/pipe/safe-html.pipe.ts","ng://konverso/lib/first-visit/first-visit.component.html","ng://konverso/lib/first-visit/first-visit.component.ts","ng://konverso/lib/desktop-full-screen/desktop-full-screen.component.html","ng://konverso/lib/desktop-full-screen/desktop-full-screen.component.ts","ng://konverso/lib/konverso.component.ts","ng://konverso/lib/konverso.component.html","ng://konverso/lib/konverso.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","KonversoService","config","http","authentication","EventEmitter","firstVisit","AssistantMode","readyState","token","BehaviorSubject","_token","asObservable","lang","customData","emulationTrigger","buildHeaders","initInstance","send","query","replace","RegExp","_this","header","preparedData","buildQuery","options","headers","post","endpoint","Date","getTime","subscribe","data","Error","sendTriggerEmulation","catch","err","console","log","response","_a","input","bearer","HttpHeaders","Authorization","_auth","auth","defaultAssets","assets","ColorSet","user","locale","_b","InputPlaceHolder","PlaceHolder","CustomWelcome","BotInitMessage","Welcome","mustache","render","_c","_d","_e","_g","_f","FirstUsage","_j","_h","firstUsageStory","_k","_l","history_1","userId","guid","custom","getValue","trim","isSending","random","Math","floor","toString","substring","core","ɵɵinject","HttpClient","factory","ɵfac","BotMessageSample","timestamp","text","infoURL","context","suggestions","DotLoaderTemplate","color","TranslateService","fr","GO","SEND","SELECT","en","translate","l","word","providedIn","SafeHtmlPipe","sanitizer","transform","bypassSecurityTrustHtml","ɵɵdirectiveInject","platformBrowser","DomSanitizer","pure","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵstyleMap","FirstVisitComponent","service","ready","position","current","go","r","ngOnInit","clear","setInterval","clearInterval","goTo","pos","start","emit","selectors","inputs","outputs","decls","vars","consts","template","rf","ctx","i0.ɵɵelementContainerStart","i0.ɵɵelement","i0.ɵɵtemplate","i0.ɵɵtext","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵtextInterpolate","ctx_r77","i0.ɵɵtextInterpolate1","i0.ɵɵelementContainer","ɵɵrestoreView","_r114","ctx_r115","ɵɵnextContext","userInput","_send","$event","userWriting","ctx_r86","currentPlaceHolder","_r144","ctx_r145","ctx_r120","DesktopFullScreenComponent","IsMobile","readySend","sendBotCommand","sendEvent","sendBtn","select","changed","newMessage","messageCurrent","msgArray","botListening","botListeningTimer","anim_done","reloaded","showWrapper","showText","ngOnChanges","document","querySelectorAll","elems","index","length_1","temp","style","opacity","getElementById","LastBotAnswer","includes","innerHTML","string","split","join","launchLoop","t2_1","setTimeout","timer","looper","shift","length_2","rep","className","key","code","endOfTopic","LastUserInput","message","userData","date","toLocaleTimeString","navigator","language","hour","minute","scroll","scrollHeight","byPassUserInput","botdata","buttons","Array","from","classList","add","remove","displayData","disableUserInput","features","ɵɵNgOnChangesFeature","i0.ɵɵclassMap","KonversoComponent","_ready","sended","error","toISOString","triggerKbotResponse","medias","required_actions","History","userAgent","match","isMobile","_isMobile","colorSet","customWelcome","Primary","Android","BlackBerry","iOS","Opera","Windows","any","KonversoModule","parentModule","forRoot","ngModule","providers","provide","useValue","imports","FormsModule","HttpClientModule","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {EventEmitter, Inject, Injectable} from '@angular/core';\nimport {ColorSet, DefaultAssets, KonversoInterface, KonversoQuery, KonversoUser} from '../interface/KonversoInterface';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {BehaviorSubject} from 'rxjs';\nimport mustache from 'mustache';\n\n@Injectable()\nexport class KonversoService {\n    public authentication: EventEmitter<KonversoUser> = new EventEmitter<KonversoUser>();\n    public assets: DefaultAssets;\n    public firstVisit = false;\n    public firstUsageStory: string[];\n    public ColorSet: ColorSet;\n    public PlaceHolder: string[];\n    public AssistantMode = false;\n    public Welcome: string;\n    public readyState: boolean = false;\n    public locale: string;\n    private token: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n    // tslint:disable-next-line:variable-name\n    private _token = this.token.asObservable();\n    private user: KonversoUser;\n    private header: HttpHeaders;\n    private endpoint: string;\n    public _auth: boolean;\n    public lang = new BehaviorSubject('');\n    public customData: BehaviorSubject<{ [key: string]: any }> = new BehaviorSubject<{ [key: string]: any }>(null);\n    public emulationTrigger: BehaviorSubject<any> = new BehaviorSubject(null);\n\n    constructor(@Inject('__NgxKonverso__') config: KonversoInterface, private http: HttpClient) {\n        this.buildHeaders();\n        this.initInstance(config);\n    }\n\n    /**\n     * Send Query To backend server and get a response\n     * @param query\n     */\n    public async send(query: string): Promise<string | any> {\n        return new Promise((resolve, reject) => {\n            if (query && query.replace(new RegExp(' ', 'g'), '')) {\n                if (this.header) {\n                    const preparedData = this.buildQuery(query);\n                    const options: any = {\n                        headers: this.header\n                    };\n                    this.http.post(this.endpoint + '?t=' + new Date().getTime(), preparedData, options)\n                        .subscribe((data: any) => {\n                            resolve(data);\n                        });\n                } else {\n                    reject(new Error('Header is not set, please provide a token though user setting or though module configuration'));\n                }\n            } else {\n                reject(new Error('Current input is empty, please try again'));\n            }\n        });\n    }\n\n    /**\n     * Emulate user entry Query To backend server and get a response\n     * @param query\n     */\n    public async sendTriggerEmulation(query: string): Promise<void> {\n        const response = await this.send(query).catch((err: any) => {\n            console.log('error trigger emulation', err);\n        });\n        if (response) {\n            this.emulationTrigger.next({input : query, ...response})\n        }\n    }\n\n    /**\n     * @private\n     * Generate Header for backend call\n     */\n    private buildHeaders() {\n        this._token.subscribe((token: string) => {\n            const bearer: string = 'Bearer ' + token;\n            this.header = new HttpHeaders({\n                //'Content-Type': 'application/json',\n                // 'Access-Control-Allow-Origin': window.location.origin,\n                'Authorization': bearer\n            });\n        });\n    }\n\n    /**\n     * @param config\n     * @private\n     * Initialize Data for User Instance\n     */\n    private initInstance(config: KonversoInterface) {\n        this._auth = !!config.auth;\n        if (config.endpoint) {\n            this.endpoint = config.endpoint;\n            if (config.AssistantMode) {\n                this.AssistantMode = config.AssistantMode;\n            }\n\n            if (config.defaultAssets) {\n                this.assets = config.defaultAssets;\n                if (config.defaultAssets.ColorSet) {\n                    this.ColorSet = config.defaultAssets.ColorSet;\n                }\n            }\n            if (config.auth) {\n                this.authentication.subscribe((user: KonversoUser) => {\n                    if (!user.lang && config.lang) {\n                        user.lang = config.lang;\n                    }\n                    this.locale = user?.lang;\n                    this.lang.next(this.locale);\n                    if (config.InputPlaceHolder && config.InputPlaceHolder[this.locale]) {\n                        this.PlaceHolder = config.InputPlaceHolder[this.locale];\n                    }\n                    if (config.CustomWelcome && config.BotInitMessage.Welcome && config.BotInitMessage.Welcome[this.locale]) {\n                        this.Welcome = mustache.render(config.BotInitMessage.Welcome[this.locale], user);\n\n                    }\n                    if (user?.token) {\n                        this.token.next(user?.token);\n                    }\n                    if (user?.firstVisit) {\n                        this.firstVisit = true;\n                        delete user.firstVisit;\n                        if (config?.BotInitMessage?.FirstUsage &&\n                            this.locale &&\n                            config?.BotInitMessage?.FirstUsage[this.locale]) {\n                            this.firstUsageStory = [];\n                            for (const history of config.BotInitMessage.FirstUsage[this.locale]) {\n                                this.firstUsageStory.push(mustache.render(history, user));\n                            }\n                        }\n                    }\n                    this.user = user;\n                    this.readyState = true;\n                });\n            } else if (config.lang) {\n                this.locale = config.lang;\n                this.lang.next(this.locale);\n                if (config.InputPlaceHolder && config.InputPlaceHolder[this.locale]) {\n                    this.PlaceHolder = config.InputPlaceHolder[this.locale];\n                }\n                if (config.CustomWelcome && config.BotInitMessage.Welcome && config.BotInitMessage.Welcome[this.locale]) {\n                    this.Welcome = config.BotInitMessage.Welcome[this.locale];\n                }\n                this.user = {\n                    userId: this.guid(),\n                    lang: config.lang\n                };\n                this.readyState = true;\n            }\n            if (config.token) {\n                this.token.next(config.token);\n            }\n        } else {\n            return new Error('Please provide endpoint');\n        }\n    }\n\n    /**\n     * @param query\n     * @private\n     * prepare set data to push to backend server\n     */\n    private buildQuery(query: string): KonversoQuery {\n        // @ts-ignore\n        const custom: any = this.customData.getValue();\n        return {\n            ...custom,\n            ...this.user,\n            query: query.replace(/\\s+/g, ' ').trim(),\n            isSending: true\n        };\n    }\n\n    /**\n     * @private\n     * Generate Random uniq Id for Konverso Instance\n     */\n    private guid() {\n        let random = () => {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        };\n        return random() + random() + '-' + random() + '-' + random() + '-' + random() + '-' + random() + random() + random();\n    }\n}\n","/***********************************************************\n **  @project ngx-konverso                              **\n **  @file BotMessageSample                                         **\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **\n **  @Date 02/04/2021                                         **\n ***********************************************************/\nimport {OpenChatBotResponse} from '../interface/KonversoInterface';\n\n\nexport const BotMessageSample : OpenChatBotResponse = {\n    query: null,\n    userId: null,\n    timestamp: 1617369777.976196,\n    text: null,\n    infoURL: '',\n    context: [],\n    suggestions: []\n};\n","/***********************************************************\n **  @project ngx-konverso                              **\n **  @file DotLoader                                         **\n **  @author Brice Daupiard <brice.daupiard@smartiiz.com>  **\n **  @Date 07/04/2021                                         **\n ***********************************************************/\n\n\nexport const DotLoaderTemplate = (color: string) => `<div class=\"loading-dots\">\n<div class=\"loading-dots--dot\" style=\"background-color: ${color}\"></div>\n  <div class=\"loading-dots--dot\" style=\"background-color: ${color}\"></div>\n  <div class=\"loading-dots--dot\" style=\"background-color: ${color}\"></div>\n  </div>`;\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslateService {\n  private lang = {\n      'fr': {\n          'GO': `C'est parti`,\n          'SEND': 'Envoyer',\n          'SELECT': 'Vous devez sélectionner une réponse',\n      },\n      'en': {\n          'GO': `Let's go`,\n          'SEND': 'Send',\n          'SELECT': 'You must select an answer',\n      }\n  }\n\n  constructor() { }\n\n  public translate(l, word) {\n    return this.lang[l][word];\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(protected sanitizer: DomSanitizer) {}\n  public transform(value: any): any {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n}\n","<ng-container>\n  <div class=\"bot-logo-init-wrapper\">\n    <!--<img [src]=\"assets.FullSizeLogo\">-->\n    <div class=\"m-carl-notification\">\n      <div class=\"m-carl-notification-cue m-cue\">\n        <div class=\"a-cue-icon\" id=\"bot-icon\"></div>\n      </div>\n    </div>\n  </div>\n  <div class=\"bot-init-text\" [innerHTML]=\"current | safeHtml\"></div>\n  <div class=\"bot-init-bullet-step\">\n      <span *ngFor=\"let elem of firstUsageStory ; let pos = index\" class=\"bot-init-dot\"\n            [style]=\"pos === position ? {\n              backgroundColor : assets?.ColorSet?.Primary,\n              borderColor :assets?.ColorSet?.Primary\n              }:{\n                backgroundColor :assets?.ColorSet?.Secondary,\n                borderColor :assets?.ColorSet?.Primary\n                }\" (click)=\"goTo(pos)\">\n      </span>\n  </div>\n  <div class=\"bot-init-button-wrapper\">\n    <button mat-button class=\"bot-button button-lg\" [style]=\"{\n      backgroundColor : '#171F26',\n      color : assets?.ColorSet?.Secondary\n    }\" (click)=\"start()\">{{ go }}</button>\n  </div>\n\n</ng-container>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {DefaultAssets} from '../../interface/KonversoInterface';\nimport { KonversoService } from '../konverso.service';\nimport { TranslateService } from '../translate.service';\n\n@Component({\n  selector: 'bot-first-visit',\n  templateUrl: './first-visit.component.html',\n  styleUrls: ['./first-visit.component.scss']\n})\nexport class FirstVisitComponent implements OnInit {\n  @Input() firstUsageStory: string[];\n  @Input() assets: DefaultAssets;\n  @Output() ready: EventEmitter<boolean> = new EventEmitter<boolean>();\n  public position = 0;\n  public current = '';\n  public go = '';\n\n  constructor(translate: TranslateService, private service: KonversoService) {\n    service.lang.subscribe((r) => {\n      if (service.locale) {\n        this.go = translate.translate(service.locale, 'GO');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.current = this.firstUsageStory[this.position];\n    const clear = setInterval(() => {\n      if (this.position < (this.firstUsageStory.length - 1)) {\n        this.current = this.firstUsageStory[++this.position];\n      } else {\n        clearInterval(clear);\n      }\n    }, 5000);\n  }\n\n  goTo(pos: number) {\n    this.position = pos;\n    this.current = this.firstUsageStory[this.position];\n  }\n\n  start(): void {\n    //console.log('OOOKKKK')\n    this.ready.emit(true);\n  }\n\n}\n","<!--<div class=\"bot-container\"  [class]=\"IsMobile ? 'bot-mobile' : ''\" [style]=\"{'background-color' : '#100652 0% 0% no-repeat padding-box;'}\"-->\n\n  <!--<canvas class=\"orb-canvas\"></canvas>\n  <div class=\"overlay\">\n    <div class=\"overlay__inner\">\n    </div>\n  </div>-->\n  <div class=\"bot-container\"  [class]=\"IsMobile ? 'bot-mobile' : ''\" [style]=\"{'background-color' : '#100652 0% 0% no-repeat padding-box;'}\"\n     xmlns=\"http://www.w3.org/1999/html\">\n  <div class=\"bot-view\">\n    <ng-container *ngIf=\"firstVisit && firstUsageStory\">\n      <bot-first-visit [firstUsageStory]=\"firstUsageStory\" [assets]=\"assets\"\n                       (ready)=\"emit($event)\"></bot-first-visit>\n    </ng-container>\n    <ng-container *ngIf=\"!firstVisit || !firstUsageStory\">\n      <button (click)=\"byPassUserInput('exit', 0)\" id=\"exit-btn\" style=\"display: none;\"></button>\n\n      <div class=\"bot-assistant-wrapper\" *ngIf=\"AssistantMode\">\n        <!--<div *ngIf=\"!botListening\" class=\"bot-logo\" id=\"botlogo\">\n          <img [src]=\"assets.FullSizeLogo\">\n        </div>-->\n        <div [ngStyle]=\"{'height': '40%'}\" class=\"bot-logo bot-listening\">\n          <div [ngStyle]=\"{'transform': 'translateY(-10vh)'}\" class=\"m-carl-notification\">\n            <div class=\"m-carl-notification-cue m-cue\">\n              <div *ngIf=\"botListening\" class=\"a-cue-voice\" id=\"bot\">\n                <div class=\"a-cue-voice-el voice1\"></div>\n                <div class=\"a-cue-voice-el voice2\"></div>\n                <div class=\"a-cue-voice-el voice3\"></div>\n                <div class=\"a-cue-voice-el voice4\"></div>\n                <div class=\"a-cue-voice-el\"></div>\n              </div>\n              <div class=\"a-cue-icon\" id=\"bot-icon\"></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"bot-discussion-wrapper\" style=\"min-height: 60%; max-height: 60%; height: 60%; /*max-height: 120px;*/\">\n          <ng-container *ngIf=\"LastUserInput\">\n            <div class=\"user-input\" *ngIf=\"LastUserInput && LastUserInput?.message != ''\">\n              <div class=\"data\" [style]=\"{\n                     color : assets?.ColorSet?.Secondary\n                    }\">\n                {{LastUserInput.message}}\n              </div>\n              <span class=\"time\">{{LastUserInput.date}}</span>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"LastBotAnswer\">\n            <div class=\"bot-answer\">\n              <ng-container>\n\n              </ng-container>\n              <ng-container *ngIf=\"LastBotAnswer.text\">\n                <!--<span *ngIf=\"!LastBotAnswer.text.includes('loading-dots')\" id=\"text\"></span><br>\n                <span *ngIf=\"changed && LastBotAnswer.text.includes('loading-dots')\" class=\"fade\" [innerHTML]=\"LastBotAnswer.text | safeHtml\"></span><br>\n                -->\n                <span *ngIf=\"!LastBotAnswer.text.includes('loading-dots') && changed && showText\" class=\"fade\" [innerHTML]=\"LastBotAnswer.text | safeHtml\"></span>\n                <span *ngIf=\"LastBotAnswer.text.includes('loading-dots')\" class=\"fade\" id=\"loading-creation\"></span>\n                <!--<br>-->\n              </ng-container>\n              <ng-container *ngIf=\"LastBotAnswer.medias && LastBotAnswer.medias.length\n                   && LastBotAnswer.medias[0].required_actions\n                   && LastBotAnswer.medias[0].required_actions.length > 0\n                   && !LastBotAnswer.text.includes('loading-dots')\">\n                <ng-container *ngFor=\"let suggest of LastBotAnswer.medias[0].required_actions; let i = index\">\n                  <ng-container *ngIf=\"suggest.format === 'button'\"  >\n                    <button *ngIf=\"suggest.value?.title == 'Terminer' && changed || suggest.value?.title == 'Quit' && changed\" [style]=\"{\n                      borderColor : assets?.ColorSet?.Primary,\n                      color : assets?.ColorSet?.Primary\n             }\"  class=\"bot-button bot-button-left show-btn\" (click)=\"byPassUserInput(suggest?.value?.onClick, i)\"\n                             [innerHTML]=\"suggest.label|| suggest.value?.displayedMessage || suggest.value?.title \">\n                    </button>\n                    <button *ngIf=\"suggest.value?.title == 'Nouvelle Demande' && changed || suggest.value?.title == 'New Request' && changed\" [style]=\"{\n                      borderColor : assets?.ColorSet?.Primary,\n                      color : assets?.ColorSet?.Primary\n             }\"  class=\"bot-button bot-button-right show-btn\" (click)=\"byPassUserInput(suggest?.value?.onClick, i)\"\n                             [innerHTML]=\"suggest.label|| suggest.value?.displayedMessage || suggest.value?.title \">\n                    </button>\n                    <button *ngIf=\"suggest.value?.title && suggest.value?.title != 'Terminer' && suggest.value?.title != 'Quit' && suggest.value?.title != 'Nouvelle Demande' && suggest.value?.title != 'New Request' && changed\" \n                    [style]=\"{\n                     borderColor : assets?.ColorSet?.Primary,\n                     color : assets?.ColorSet?.Primary\n            }\"  class=\"bot-button bot-button-grey show-btn\" (click)=\"byPassUserInput(suggest?.value?.onClick, i)\"\n                            [innerHTML]=\"suggest.label|| suggest.value?.displayedMessage || suggest.value?.title \">\n                    </button>\n                  </ng-container>\n                </ng-container>\n              </ng-container>\n\n            </div>\n          </ng-container>\n          <div class=\"bot-input-wrapper\">\n            <div class=\"bot-input\" id=\"bot-input-div\" *ngIf=\"!disableUserInput\">\n              <input type=\"text\" [(ngModel)]=\"userInput\" (keyup.enter)=\"userInput && _send()\" (keyup)=\"userWriting($event)\" maxlength=\"200\"\n                     [placeholder]=\"currentPlaceHolder\">\n              <button class=\"bot-button\" [style]=\"{\n                     backgroundColor : assets?.ColorSet?.Primary,\n                     color : assets?.ColorSet?.Secondary\n            }\" (click)=\"_send()\" [disabled]=\"!userInput\">{{ sendBtn }}\n              </button>\n            </div>\n            <div class=\"bot-input-disable\" *ngIf=\"disableUserInput\">\n              <i>{{ select }}</i>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"bot-chat-wrapper\" *ngIf=\"!AssistantMode\">\n        {{AssistantMode}}\n        <div class=\"bot-discussion-wrapper\" #scrollMe [scrollTop]=\"scrollMe.scrollTo(0, 9999999)\">\n          <div class=\"bot-chat\">\n\n            <ng-container *ngFor=\"let entry of displayData\">\n              <ng-container *ngIf=\"entry.date\">\n                <div class=\"user-input\">\n                  <div class=\"data\" [style]=\"{\n                     backgroundColor : assets?.ColorSet?.Primary,\n                     color : assets?.ColorSet?.Secondary\n                    }\">\n                    {{entry.message}}\n                  </div>\n                  <span class=\"time\">{{entry.date}}</span>\n                </div>\n              </ng-container>\n              <ng-container *ngIf=\"!entry.date\">\n                <div class=\"bot-answer\">\n                  <ng-container *ngIf=\"entry.text\">\n                    <span *ngIf=\"changed\" class=\"fade\" [innerHTML]=\"entry.text | safeHtml\"></span>\n                    <!--<br>-->\n                  </ng-container>\n                  <ng-container *ngIf=\"entry.medias && entry.medias.length\n                   && entry.medias[0].required_actions\n                   && entry.medias[0].required_actions.length\">\n                    <ng-container *ngFor=\"let suggest of entry.medias[0].required_actions\">\n                      <ng-container *ngIf=\"suggest.format === 'button'\">\n                        <button *ngIf=\"changed\" [style]=\"{\n                     borderColor : assets?.ColorSet?.Primary,\n                     color : assets?.ColorSet?.Primary\n            }\" class=\"bot-button fade\" (click)=\"byPassUserInput(suggest?.value?.onClick)\"\n                                [innerHTML]=\"suggest.label|| suggest.value?.displayedMessage || suggest.value?.title \"></button>\n                      </ng-container>\n                    </ng-container>\n                  </ng-container>\n\n                </div>\n              </ng-container>\n            </ng-container>\n          </div>\n        </div>\n        <div class=\"bot-input-wrapper\">\n          <div class=\"bot-input\" *ngIf=\"!disableUserInput\">\n            <input type=\"text\" [(ngModel)]=\"userInput\" (keyup.enter)=\"userInput && _send()\" (keyup)=\"userWriting($event)\" maxlength=\"200\"\n                   [placeholder]=\"currentPlaceHolder\">\n            <button *ngIf=\"changed\" class=\"bot-button\" [style]=\"{\n                     backgroundColor : assets?.ColorSet?.Primary,\n                     color : assets?.ColorSet?.Secondary\n            }\" (click)=\"_send()\" [disabled]=\"!userInput\">{{ sendBtn }}\n            </button>\n          </div>\n          <div class=\"bot-input-disable\" *ngIf=\"disableUserInput\">\n            <i>{{ select }}</i>\n          </div>\n        </div>\n        <div class=\"bot-logo\">\n          <img [src]=\"assets.FullSizeLogo\">\n        </div>\n      </div>\n    </ng-container>\n\n  </div>\n</div>\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\nimport {DefaultAssets, OpenChatBotResponse, UserInput} from '../../interface/KonversoInterface';\nimport { KonversoService } from '../konverso.service';\nimport { TranslateService } from '../translate.service';\n//import * as run from 'projects/konverso/assets/animatedback.js';\n//import {KawaseBlurFilter} from \"../../filters/kawase-blur/src/KawaseBlurFilter\";\ndeclare var PIXI: any;\n\n@Component({\n  selector: 'bot-full-screen',\n  templateUrl: './desktop-full-screen.component.html',\n  styleUrls: ['./desktop-full-screen.component.css']\n})\nexport class DesktopFullScreenComponent implements OnChanges, OnInit {\n  @Input() AssistantMode: boolean = false;\n  @Input() assets: DefaultAssets;\n  @Input() firstVisit: boolean = false;\n  @Input() firstUsageStory: string[];\n  @Input() displayData: (UserInput | OpenChatBotResponse)[];\n  @Input() disableUserInput: boolean;\n  @Input() LastUserInput: UserInput;\n  @Input() LastBotAnswer: OpenChatBotResponse;\n  @Input() PlaceHolder: string[];\n  @Input() IsMobile: boolean = false;\n\n  @Output() readySend: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n  @Output() send: EventEmitter<UserInput> = new EventEmitter<UserInput>(null);\n  @Output() sendBotCommand: EventEmitter<string> = new EventEmitter<string>(null);\n  @Output() sendEvent: EventEmitter<string> = new EventEmitter<string>(null);\n  public userInput: string;\n  public currentPlaceHolder: string = '';\n  public sendBtn = '';\n  public select = '';\n  public changed = false;\n  private newMessage = false;\n  private messageCurrent = '';\n  private msgArray = [];\n  public botListening = false;\n  private botListeningTimer = 0;\n  private anim_done = false;\n  private reloaded = false;\n  private timer;\n  public showWrapper = false;\n  public showText = false;\n\n  constructor(translate: TranslateService, private service: KonversoService) {\n    service.lang.subscribe((r) => {\n      if (service.locale) {\n        this.sendBtn = translate.translate(service.locale, 'SEND');\n        this.select = translate.translate(service.locale, 'SELECT');\n      }\n    });\n  }\n\n  ngOnChanges() {\n    let t = setInterval(() => {\n      if (document.querySelectorAll('.bot-answer')) {\n        let elems = document.querySelectorAll('.bot-answer')\n        if (elems.length > 0) {\n            let index = 0, length = elems.length;\n            let rep = true;\n            for ( ; index < length; index++) {\n                let temp = elems[index] as HTMLElement;\n                if (temp.style.opacity == '0') {\n                  temp.style.opacity = '1';\n                }\n            }\n            this.anim_done = rep;\n            if (this.anim_done) {\n              clearInterval(t);\n            }\n        }\n      }\n    }, 100);\n\n    this.changed = false;\n\n    if (document.getElementById('text') && !this.LastBotAnswer?.text.includes(\"loading-dots\")) {\n      document.getElementById('text').innerHTML = '';\n    }\n    //console.log(this.LastBotAnswer);\n\n    if (!this.anim_done) {\n      let t2 = setInterval(() => {\n        if (this.LastBotAnswer && !this.LastBotAnswer?.text.includes(\"loading-dots\") && this.anim_done) {\n          clearInterval(t2);\n          var string = this.LastBotAnswer?.text\n            .split('<br/>').join(` `)\n            .split('&eacute;').join('é')\n            .split('&egrave;').join('è')\n            .replace(/<[^>]*>?/gm, '')\n            .split('&nbsp;').join('');\n  \n          this.msgArray = string.split(\"\");\n          if (this.messageCurrent != string) {\n            this.newMessage = true;\n            this.messageCurrent = string;\n            this.launchLoop();\n          }\n          //this.looper(array, timer);\n        }\n      }, 100)\n    } else {\n      var string = this.LastBotAnswer?.text\n          .split('<br/>').join(` `)\n          .split('&eacute;').join('é')\n          .split('&egrave;').join('è')\n          .replace(/<[^>]*>?/gm, '')\n          .split('&nbsp;').join('');\n\n        this.msgArray = string.split(\"\");\n        if (this.messageCurrent != string && string != '') {\n          this.newMessage = true;\n          this.messageCurrent = string;\n          this.launchLoop();\n        }\n    }\n\n    setTimeout(() => {\n      this.changed = true;\n    }, 100);\n  }\n\n  launchLoop() {\n    this.timer = setInterval(() => {\n      if (this.msgArray.length == 0) {\n        clearInterval(this.timer);\n      }\n      if (this.newMessage) {\n        if (document.getElementById('text')) {\n          document.getElementById('text').innerHTML = '';\n        }\n        \n        this.newMessage = false;\n        //this.msgArray = this.messageCurrent.split(\"\");\n        clearInterval(this.timer);\n        this.launchLoop();\n      }\n      this.looper();\n    }, 60);\n  }\n\n  looper() {\n      if(this.msgArray.length > 0 && !this.reloaded) {\n        if (document.getElementById('text')) {\n          document.getElementById('text').innerHTML += this.msgArray.shift();\n        }\n      }/*else {\n        clearTimeout(timer);\n      }*/\n      /*timer = setTimeout(() => {\n        this.looper(array, timer);\n      }, 30);*/\n  }\n\n  ngOnInit(): void {\n    if (this.PlaceHolder) {\n      this.currentPlaceHolder = this.PlaceHolder[Math.floor(Math.random() * this.PlaceHolder.length)];\n      setInterval(() => {\n        this.currentPlaceHolder = this.PlaceHolder[Math.floor(Math.random() * this.PlaceHolder.length)];\n      }, 3000);\n    }\n\n    setTimeout(() => {\n      this.showWrapper = true;\n    }, 2000);\n\n    setTimeout(() => {\n      this.showText = true;\n    }, 2500);\n\n    let t = setInterval(() => {\n      if (document.querySelectorAll('.bot-answer')) {\n        let elems = document.querySelectorAll('.bot-answer')\n        if (elems.length > 0) {\n            let index = 0, length = elems.length;\n            let rep = true;\n            for ( ; index < length; index++) {\n                let temp = elems[index] as HTMLElement;\n                if (temp.style.opacity == '0') {\n                  rep = false;\n                }\n            }\n            this.anim_done = rep;\n            if (this.anim_done) {\n              clearInterval(t);\n            }\n        }\n      }\n    }, 100);\n\n    //run.run();\n\n    setInterval(() => {\n      if (this.botListeningTimer > 0) {\n        this.botListeningTimer -= 1;\n\n        if (this.botListeningTimer > 0) {\n          document.getElementById('bot').className = 'a-cue-voice speaking'\n          document.getElementById('bot-icon').className = 'a-cue-icon speakingicon'\n        } else {\n          document.getElementById('bot').className = 'a-cue-voice';\n          document.getElementById('bot-icon').className = 'a-cue-icon'\n        }\n\n        this.botListening = this.botListeningTimer > 0;\n      }\n    }, 500)\n  }\n\n  userWriting(key) {\n    if (key.code == 'Enter') {\n      this.botListening = false;\n      this.botListeningTimer = 0;\n    } else if (key.code == 'Backspace') {\n      \n    } else {\n      this.botListening = true;\n      if (this.botListeningTimer == 0) {\n        this.botListeningTimer += 2;\n      } else if (this.botListeningTimer < 5) {\n        this.botListeningTimer += 1;\n      }\n    }\n  }\n\n  public emit($event) {\n    this.firstVisit = false;\n    this.readySend.emit(true);\n  }\n\n  public _send() {\n    if (this.LastBotAnswer?.endOfTopic && this.LastUserInput) {\n      this.LastUserInput.message = '';\n    }\n\n    this.botListening = false;\n    const userData: UserInput = {\n      message: this.userInput,\n      date: new Date().toLocaleTimeString(navigator.language, {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    };\n    this.send.emit(userData);\n    this.userInput = null;\n  }\n\n  async scroll(scrollHeight: number) {\n    return new Promise<number>((resolve) => {\n      setTimeout(() => {\n        resolve(0);\n      }, 300);\n    });\n\n  }\n\n  byPassUserInput(botdata: string, i?: number) {\n    /*const buttons: NodeListOf<HTMLElement> = document.querySelectorAll('.show-btn');\n    for (let btn of Array.from(buttons)) {\n      btn.classList.add('hidden-btn');\n    }*/\n    const buttons: NodeListOf<HTMLElement> = document.querySelectorAll('.bot-answer');\n    for (let btn of Array.from(buttons)) {\n      btn.classList.add('hidden-btn');\n    }\n    this.sendBotCommand.emit(botdata);\n    setTimeout(() => {\n      const buttons: NodeListOf<HTMLElement> = document.querySelectorAll('.bot-answer');\n      for (let btn of Array.from(buttons)) {\n        btn.classList.remove('hidden-btn');\n      }\n    }, 1000);\n  }\n}\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {KonversoService} from './konverso.service';\nimport {ColorSet, DefaultAssets, KonversoAnswer, OpenChatBotResponse, UserInput} from '../interface/KonversoInterface';\nimport {BotMessageSample} from '../Sample/BotMessageSample';\nimport {DotLoaderTemplate} from '../Sample/DotLoader';\n\n// @ts-ignore\n@Component({\n    selector: 'ngx-konverso',\n    templateUrl: 'konverso.component.html',\n    styleUrls: ['../../assets/main.scss']\n})\nexport class KonversoComponent implements OnInit {\n    public _ready: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() ready: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() sended: EventEmitter<boolean> = new EventEmitter<boolean>();\n    public query: string;\n    public isMobile: boolean;\n    public assets: DefaultAssets;\n    public firstVisit: boolean;\n    public firstUsageStory: string[];\n    public AssistantMode = false;\n    public colorSet: ColorSet;\n    public History: (UserInput | OpenChatBotResponse)[];\n    public disableUserInput = false;\n    public LastUserInput: UserInput;\n    public LastBotAnswer: OpenChatBotResponse;\n    public PlaceHolder: string[];\n    public Welcome: string;\n\n    constructor(private service: KonversoService) {\n        if (service._auth) {\n            this.service.authentication.subscribe(() => {\n                this.ngOnInit();\n            })\n        }\n        this.service.emulationTrigger.subscribe((response: any) => {\n            console.log(response);\n            if (response) {\n                if (!this.LastUserInput) {\n                    this.LastUserInput = {\n                        message: '',\n                        date: '',\n                        error: null\n                    }\n                }\n                this.LastUserInput.message += ' ' + response.input;\n                this.LastUserInput.date = new Date().toISOString();\n                this.triggerKbotResponse(response);\n            }\n        })\n    }\n\n    private triggerKbotResponse(response: any): void {\n        if (response && response.response) {\n            if (response.response.medias && response.response.medias[0] && response.response.medias[0].required_actions &&\n                response.response.medias[0].required_actions.length) {\n                this.disableUserInput = true;\n            } else {\n                this.disableUserInput = false;\n            }\n            this.LastBotAnswer = response.response;\n            this.History.push(response.response);\n        }\n    }\n\n    ngOnInit() {\n        console.log('user agent', navigator.userAgent, navigator.userAgent.match(/iPhone|iPad|iPod/i))\n        this.isMobile = this._isMobile();\n        this.assets = this.service.assets;\n        this.firstVisit = this.service.firstVisit;\n        this.firstUsageStory = this.service.firstUsageStory;\n        this.AssistantMode = this.service.AssistantMode;\n        this.PlaceHolder = this.service.PlaceHolder;\n        this.Welcome = this.service.Welcome;\n        this.sendBotCommand('exit', false).catch((err: any) => console.log('fail reset session'));\n        this.History = [];\n        if (this.service.ColorSet) {\n            this.colorSet = this.service.ColorSet;\n        }\n        this._ready.subscribe((ready: boolean) => {\n            if (ready) {\n                this.firstVisit = false;\n                this.service.firstVisit = false;\n                this.ready.emit(ready);\n            }\n        });\n        if (this.Welcome) {\n            const customWelcome: OpenChatBotResponse = BotMessageSample;\n            customWelcome.text = this.Welcome;\n            this.LastBotAnswer = customWelcome;\n            this.History.push(customWelcome);\n        }\n    }\n\n    async send($event: UserInput) {\n        if ($event.message === 'exit') {\n            this.sendBotCommand('exit', false).catch((err: any) => console.log('fail reset session'));\n            return false;\n        }\n        this.sended.emit(true);\n        this.LastBotAnswer.text = '<br>' + DotLoaderTemplate(this.service.ColorSet.Primary);\n        this.History.push($event);\n        if (this.AssistantMode) {\n            if (this.LastUserInput) {\n                this.LastUserInput.message += ' ' + $event.message;\n                this.LastUserInput.date = $event.date;\n            } else {\n                this.LastUserInput = $event;\n            }\n        } else {\n            this.LastUserInput = $event;\n        }\n\n        const index: number = this.History.length - 1;\n        const response: KonversoAnswer = await this.service.send($event.message).catch((err: string) => {\n            console.log('We got an error ', err);\n            // @ts-ignore\n            this.History[index].error = true;\n        });\n        this.triggerKbotResponse(response);\n    }\n\n    async sendBotCommand($event: string, push: boolean = true) {\n        this.LastBotAnswer.text = '<br>' + DotLoaderTemplate(this.service.ColorSet.Primary);\n        if ($event === 'yes_response' || $event === 'no_response' || $event == 'exit') {\n            this.LastUserInput = null;\n        }\n        const response: KonversoAnswer = await this.service.send($event).catch((err: string) => {\n            console.log('We got an error ', err);\n        });\n        if (response.response.medias && response.response.medias[0] && response.response.medias[0].required_actions &&\n            response.response.medias[0].required_actions.length) {\n            this.disableUserInput = true;\n        } else {\n            this.disableUserInput = false;\n        }\n        if (response && response.response && push) {\n            this.LastBotAnswer = response.response;\n            this.History.push(response.response);\n        } else if (response && response.response && !push) {\n            this.LastUserInput = null;\n            this.LastBotAnswer = response.response;\n            this.History.push(response.response);\n        } else {\n            this.LastUserInput = null;\n        }\n    }\n\n    private _isMobile(): boolean {\n\n        const isMobile = {\n            Android: (): boolean => {\n                return !!navigator.userAgent.match(/Android/i);\n            },\n            BlackBerry: (): boolean => {\n                return !!navigator.userAgent.match(/BlackBerry/i);\n            },\n            iOS: (): boolean => {\n                return !!navigator.userAgent.match(/iPhone|iPad|iPod/i);\n            },\n            Opera: (): boolean => {\n                return !!navigator.userAgent.match(/Opera Mini/i);\n            },\n            Windows: (): boolean => {\n                return !!navigator.userAgent.match(/IEMobile/i) || !!navigator.userAgent.match(/WPDesktop/i);\n            },\n            any: (): boolean => {\n                return !!(isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n            }\n        };\n        return isMobile.any();\n    }\n\n\n}\n","<bot-full-screen [class]=\"isMobile ? 'bot-mobile' : ''\"\n                 [assets]=\"assets\"\n                 [firstVisit]=\"firstVisit\"\n                 [firstUsageStory]=\"firstUsageStory\"\n                 (send)=\"send($event)\"\n                 (sendBotCommand)=\"sendBotCommand($event)\"\n                 [displayData]=\"History\"\n                 [disableUserInput]=\"disableUserInput\"\n                 [LastBotAnswer]=\"LastBotAnswer\"\n                 [LastUserInput]=\"LastUserInput\"\n                 [AssistantMode]=\"AssistantMode\"\n                 [PlaceHolder]=\"PlaceHolder\"\n                 [IsMobile]=\"isMobile\"\n                 (readySend)=\"_ready.emit($event)\"\n></bot-full-screen>\n\n\n","import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {KonversoComponent} from './konverso.component';\nimport {KonversoInterface} from '../interface/KonversoInterface';\nimport {KonversoService} from './konverso.service';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {DesktopFullScreenComponent} from './desktop-full-screen/desktop-full-screen.component';\nimport {CommonModule} from '@angular/common';\nimport { FirstVisitComponent } from './first-visit/first-visit.component';\nimport { SafeHtmlPipe } from './pipe/safe-html.pipe';\n\n// @ts-ignore\n@NgModule({\n  declarations: [KonversoComponent, DesktopFullScreenComponent, FirstVisitComponent, SafeHtmlPipe],\n  imports: [\n    FormsModule,\n    HttpClientModule,\n    CommonModule,\n  ],\n  providers : [KonversoService],\n  exports: [KonversoComponent]\n})\nexport class KonversoModule {\n  constructor(@Optional() @SkipSelf() parentModule?: KonversoModule) {\n    if (parentModule) {\n      throw new Error(\n        'KonversoModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  public static forRoot(config: KonversoInterface): ModuleWithProviders<KonversoModule> {\n    return {\n      ngModule: KonversoModule,\n      providers: [\n        {provide: '__NgxKonverso__', useValue: config},\n        KonversoService\n      ]\n    };\n  }\n}\n"]}